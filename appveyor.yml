# AppVeyor.com is a Continuous Integration service to build and run tests under Windows

build: off

environment:
  matrix:
    - PYTHON: 2.7
      MINICONDA: C:\Miniconda
      PYTHON_ARCH: 32
    - PYTHON: 3.5
      MINICONDA: C:\Miniconda3
      PYTHON_ARCH: 32
    - PYTHON: 3.6
      MINICONDA: C:\Miniconda3
      PYTHON_ARCH: 32
    - PYTHON: 2.7
      MINICONDA: C:\Miniconda
      PYTHON_ARCH: 64
    - PYTHON: 3.5
      MINICONDA: C:\Miniconda3
      PYTHON_ARCH: 64
    - PYTHON: 3.6
      MINICONDA: C:\Miniconda3
      PYTHON_ARCH: 64

  pypi_password:
    secure: S2mZCxm5LzIF4KFDss/f7g==

init:
  - "ECHO %PYTHON% %MINICONDA%"

install:
  - "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - "conda create -q -n test-environment python=%PYTHON% numpy scipy matplotlib cython ipython pillow wheel"
  - activate test-environment
  - pip install -r requirements_dev.txt
  - python setup.py install

test_script:
  - cd tests
  - nosetests base tree -v -s
  - cd ..

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  - python setup.py sdist bdist_wheel

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

deploy_script:
  # following https://github.com/AndrewAnnex/SpiceyPy/blob/master/appveyor.yml
  - echo "Starting Artifact deployment"
  - echo [distutils] > %USERPROFILE%\\.pypirc
  - echo index-servers = >> %USERPROFILE%\\.pypirc
  - echo   pypi >> %USERPROFILE%\\.pypirc
  - echo [pypi] >> %USERPROFILE%\\.pypirc
  - echo repository=https://pypi.python.org/pypi >> %USERPROFILE%\\.pypirc
  - echo username=lheagy >> %USERPROFILE%\\.pypirc
  - echo password=%pypi_password% >> %USERPROFILE%\\.pypirc
  # deploy on dev or master
  - ps: If ($env:APPVEYOR_REPO_TAG -eq "true" ) { Invoke-Expression "twine upload -r pypi --skip-existing dist/*" 2>$null } Else { write-output "Not on a tag, won't deploy to pypi"}
  - ps: If ($env:APPVEYOR_REPO_TAG -eq "true" ) { Invoke-Expression "twine upload -r pypi --skip-existing dist/*" 2>$null } Else { write-output "Not on a tag, won't deploy to pypi"}
